[
  {
    "query": "split X and y into training and test sets with 20 percent test size",
    "code": "from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)"
  },
  {
    "query": "fit a linear regression model using X and y",
    "code": "from sklearn.linear_model import LinearRegression\nmodel = LinearRegression().fit(X, y)"
  },
  {
    "query": "evaluate model accuracy on X_test and y_test",
    "code": "from sklearn.metrics import accuracy_score\ny_pred = model.predict(X_test)\naccuracy_score(y_test, y_pred)"
  },
  {
    "query": "standardize the data column col using StandardScaler",
    "code": "from sklearn.preprocessing import StandardScaler\ncol = StandardScaler().fit_transform(col)"
  },
  {
    "query": "drop rows with missing values from df",
    "code": "df = df.dropna()"
  },
  {
    "query": "load a csv file data.csv into dataframe df",
    "code": "import pandas as pd\ndf = pd.read_csv('data.csv')"
  }
]
